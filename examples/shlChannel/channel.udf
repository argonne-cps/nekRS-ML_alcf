#include "ci.inc"

/* User Functions */

static dfloat P_ROT;
static dfloat visc;

#ifdef __okl__

#include "channel.oudf"

#endif

void userf(double time)
{
  auto mesh = nrs->mesh;
  const dfloat DP = 3.0 * visc;
  cfill(mesh->Nlocal, nrs->fieldOffset, P_ROT, DP, nrs->o_NLT);
}

void UDF_LoadKernels(deviceKernelProperties &kernelInfo)
{
  platform->options.getArgs("VISCOSITY", visc);
  kernelInfo.define("p_visc") = visc;
}

void UDF_Setup0(MPI_Comm comm, setupAide &options)
{
  options.getArgs("CI-MODE", ciMode);
  if (ciMode) {
    ciSetup(comm, options);
  }
  platform->par->extract("casedata", "p_rot", P_ROT);
  if (platform->options.compareArgs("BUILD ONLY", "FALSE")) {
    *nek::ptr<double>("p_rot") = P_ROT;
  }
}

void UDF_Setup()
{
  nrs->userVelocitySource = &userf;
}

void UDF_ExecuteStep(double time, int tstep)
{
  if (nrs->checkpointStep) {
    nrs->copyToNek(time, tstep);
    nek::userchk();
  }
  if (ciMode) {
    ciTestErrors(nrs, time, tstep);
  }
}
