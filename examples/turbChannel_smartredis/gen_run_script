#!/bin/bash
set -a

SYSTEM="aurora"
DEPLOYMENT="colocated"
ML_TASK="train"
NEKRS_HOME="/flare/Aurora_deployment/balin/Nek/nekRSv24/exe/nekrsv24_simai_frameworks"
VENV_PATH="/flare/Aurora_deployment/balin/Nek/nekRSv24/venv/_ssim_env/bin/activate"
PROJ_ID="Aurora_deployment"
QUEUE="lustre_scaling"

if [ ${SYSTEM} == "aurora" ]; then
  module load frameworks
fi

if [ -z $VENV_PATH ]; then
  echo -e "\033[35mA Python venv was not specified, building one now ...\033[m"
  python -m venv --clear _ssim --system-site-packages
  source _ssim/bin/activate
  
  export TORCH_CMAKE_PATH=$( python -c 'import torch;print(torch.utils.cmake_prefix_path)' )
  export TORCH_PATH=$( python -c 'import torch; print(torch.__path__[0])' )
  export LD_LIBRARY_PATH=$TORCH_PATH/lib:$LD_LIBRARY_PATH
  git clone https://github.com/rickybalin/SmartSim.git
  cd SmartSim
  git checkout rollback_aurora
  pip install -e .
  smart build -v --device cpu --torch_dir $TORCH_CMAKE_PATH --no_tf
  smart validate
  cd ..
  VENV_PATH=${PWD}/_ssim/bin/activate
fi

echo "Setting up case:"
echo "    system: ${SYSTEM}"
echo "    deployment: ${DEPLOYMENT}"
echo "    ML task: ${ML_TASK}"
echo

script_name=ssimrun_${SYSTEM}
if [ ${DEPLOYMENT} == "colocated" ]; then
  NODES=`cat $PBS_NODEFILE | wc -l`
  NEKRS_HOME=$NEKRS_HOME \
  PROJ_ID=$PROJ_ID \
  QUEUE=$QUEUE \
  DEPLOYMENT=$DEPLOYMENT \
  ML_TASK=$ML_TASK \
  VENV_PATH=$VENV_PATH \
  ./${script_name} turbChannel $NODES 00:30
elif [ ${DEPLOYMENT} == "clustered" ]; then
  NODES=`cat $PBS_NODEFILE | wc -l`
  echo "Running on $NODES total nodes"
  echo "Enter the number of database node"
  read DB_NODES
  echo "simulation nodes"
  read SIM_NODES
  if [ ${ML_TASK} == "train" ]; then
    echo "and trainer nodes to use"
    read TRAIN_NODES
  else
    TRAIN_NODES=1
  fi
  NEKRS_HOME=$NEKRS_HOME \
  PROJ_ID=$PROJ_ID \
  QUEUE=$QUEUE \
  DEPLOYMENT=$DEPLOYMENT \
  ML_TASK=$ML_TASK \
  VENV_PATH=$VENV_PATH \
  DB_NODES=$DB_NODES SIM_NODES=$SIM_NODES TRAIN_NODES=$TRAIN_NODES \
  ./${script_name} turbChannel $NODES 00:30
else
  echo Please select between clustered and colocated deployment of the workflow
fi

